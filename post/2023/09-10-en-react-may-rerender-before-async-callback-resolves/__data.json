{"type":"data","nodes":[null,{"type":"data","data":[{"html":1,"frontmatter":2,"date":14,"lang":15,"tocData":16},"\u003Cp>In React, rerendering may run before async callbacks finish or resolve.\u003C/p>\n\u003Cp>Think of a simple component which calls API and update its own state.\nUpon the button click, the following function calls run in order: \u003Ccode>onClick\u003C/code> => \u003Ccode>updateState\u003C/code> => \u003Ccode>api\u003C/code>.\u003C/p>\n\u003Cpre class=\"language-jsx\">\u003Ccode class=\"language-jsx code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">\u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">\u003Cspan class=\"token maybe-class-name\">Component\u003C/span>\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>state\u003Cspan class=\"token punctuation\">,\u003C/span> setState\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">useState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">api\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">currentValue\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">    \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token keyword\">new\u003C/span> \u003Cspan class=\"token class-name\">Promise\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">res\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token function\">setTimeout\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>res\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token comment\">// To mimic remote API call\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"6\">    \u003Cspan class=\"token keyword control-flow\">return\u003C/span> currentValue \u003Cspan class=\"token operator\">+\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"7\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"8\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"9\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">updateState\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"10\">    \u003Cspan class=\"token keyword\">const\u003C/span> newValue \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token function\">api\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"11\">    \u003Cspan class=\"token function\">setState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>newValue\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"12\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"13\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"14\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">onClick\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"15\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'log-0'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"16\">    \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token function\">updateState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"17\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'log-1'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"18\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"19\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"20\">  \u003Cspan class=\"token function\">useEffect\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"21\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'rerender'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"22\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"23\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"24\">  \u003Cspan class=\"token keyword control-flow\">return\u003C/span> \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"25\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">Component \u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>state\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"26\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>button\u003C/span> \u003Cspan class=\"token attr-name\">onClick\u003C/span>\u003Cspan class=\"token script language-javascript\">\u003Cspan class=\"token script-punctuation punctuation\">=\u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>onClick\u003Cspan class=\"token punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">Click\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>button\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"27\">\u003Cspan class=\"token plain-text\">  \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"28\">\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cimg src=\"/img/2023-09-10-react-may-rerender-before-async-callback-resolves/basic-component.gif\" alt=\"basic-component\">\u003C/p>\n\u003Cp>Console prints out \u003Ccode>log-0\u003C/code> => \u003Ccode>log-1\u003C/code> => \u003Ccode>rerender\u003C/code> in order.\nI believe this is expected behavior for most of React developers.\u003C/p>\n\u003Chr>\n\u003Cp>Then what if we have a local cache so that we dont need to call API?\u003C/p>\n\u003Cpre class=\"language-jsx\">\u003Ccode class=\"language-jsx code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">\u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">getCache\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">  \u003Cspan class=\"token keyword\">const\u003C/span> entries \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">    \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">    \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token number\">2\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">    \u003Cspan class=\"token number\">2\u003C/span>\u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token number\">3\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"6\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"7\">  \u003Cspan class=\"token keyword control-flow\">return\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">currentValue\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"8\">    \u003Cspan class=\"token keyword control-flow\">return\u003C/span> entries\u003Cspan class=\"token punctuation\">[\u003C/span>currentValue\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"9\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"10\">\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"11\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"12\">\u003Cspan class=\"token keyword\">const\u003C/span> cache \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">getCache\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Let's integrate the cache into the component.\u003C/p>\n\u003Cpre class=\"language-jsx\">\u003Ccode class=\"language-jsx code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">\u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">\u003Cspan class=\"token maybe-class-name\">CacheComp\u003C/span>\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>state\u003Cspan class=\"token punctuation\">,\u003C/span> setState\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">useState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">api\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">currentValue\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">    \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token keyword\">new\u003C/span> \u003Cspan class=\"token class-name\">Promise\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">res\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token function\">setTimeout\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>res\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"6\">    \u003Cspan class=\"token keyword control-flow\">return\u003C/span> currentValue \u003Cspan class=\"token operator\">+\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"7\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"8\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"9\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">updateState\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"10\">    \u003Cspan class=\"token keyword\">const\u003C/span> cachedValue \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">cache\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"11\">    \u003Cspan class=\"token keyword control-flow\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>cachedValue\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"12\">      \u003Cspan class=\"token function\">setState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cachedValue\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"13\">      \u003Cspan class=\"token keyword control-flow\">return\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"14\">    \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"15\">    \u003Cspan class=\"token keyword\">const\u003C/span> newValue \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token function\">api\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"16\">    \u003Cspan class=\"token function\">setState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>newValue\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"17\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"18\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"19\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">onClick\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"20\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'log-0'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"21\">    \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token function\">updateState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"22\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'log-1'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"23\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"24\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"25\">  \u003Cspan class=\"token function\">useEffect\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"26\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'rerender'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"27\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"28\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"29\">  \u003Cspan class=\"token keyword control-flow\">return\u003C/span> \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"30\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">Component with cache \u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>state\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"31\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>button\u003C/span> \u003Cspan class=\"token attr-name\">onClick\u003C/span>\u003Cspan class=\"token script language-javascript\">\u003Cspan class=\"token script-punctuation punctuation\">=\u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>onClick\u003Cspan class=\"token punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">Click\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>button\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"32\">\u003Cspan class=\"token plain-text\">  \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"33\">\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"34\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"35\">\u003Cspan class=\"token keyword module\">export\u003C/span> \u003Cspan class=\"token keyword module\">default\u003C/span> \u003Cspan class=\"token maybe-class-name\">CacheComp\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"36\">\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cimg src=\"/img/2023-09-10-react-may-rerender-before-async-callback-resolves/component-with-cache.gif\" alt=\"component-with-cache\">\u003C/p>\n\u003Cp>It outputs \u003Ccode>log-0\u003C/code> => \u003Ccode>rerender\u003C/code> => \u003Ccode>log-1\u003C/code>.\u003C/p>\n\u003Cp>Is this expected behavior? I think not.\nbefore even \u003Ccode>onClick\u003C/code> function finishes (= the promise returned by \u003Ccode>updateState\u003C/code> resolves),\nReact updates states (= rerender by \u003Ccode>setState(newValue)\u003C/code>).\u003C/p>\n\u003Cp>I have no idea what is the root cause for this phenomenon,\nbut it has something to do that \u003Ccode>updateState\u003C/code> function is \u003Ccode>async\u003C/code> function but\nthe statements it executes when cache hits occur are actually \u003Ccode>sync\u003C/code>.\u003C/p>\n\u003Cpre class=\"language-jsx\">\u003Ccode class=\"language-jsx code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">  \u003Cspan class=\"token comment\">// If cache hits...\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">updateState\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">    \u003Cspan class=\"token keyword\">const\u003C/span> cachedValue \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">cache\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">    \u003Cspan class=\"token function\">setState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cachedValue\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">    \u003Cspan class=\"token keyword control-flow\">return\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"6\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>After \u003Ccode>setState\u003C/code> runs, \u003Ccode>onClick\u003C/code> waits for \u003Ccode>updateState()\u003C/code> to resolve.\nIn the meantime, React decided to rerender for some reasons.\u003C/p>\n\u003Chr>\n\u003Cp>Think of another example where multiple states are defined and get updated.\u003C/p>\n\u003Cpre class=\"language-jsx\">\u003Ccode class=\"language-jsx code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">\u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">\u003Cspan class=\"token maybe-class-name\">MultiCacheComp\u003C/span>\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>state1\u003Cspan class=\"token punctuation\">,\u003C/span> setState1\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">useState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>state2\u003Cspan class=\"token punctuation\">,\u003C/span> setState2\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">useState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">api\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">currentValue\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"6\">    \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token keyword\">new\u003C/span> \u003Cspan class=\"token class-name\">Promise\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">res\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token function\">setTimeout\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>res\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"7\">    \u003Cspan class=\"token keyword control-flow\">return\u003C/span> currentValue \u003Cspan class=\"token operator\">+\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"8\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"9\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"10\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">updateState\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"11\">    \u003Cspan class=\"token keyword\">const\u003C/span> cachedValue1 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">cache\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state1\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"12\">    \u003Cspan class=\"token keyword control-flow\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>cachedValue1\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"13\">      \u003Cspan class=\"token function\">setState1\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cachedValue1\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"14\">    \u003Cspan class=\"token punctuation\">}\u003C/span> \u003Cspan class=\"token keyword control-flow\">else\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"15\">      \u003Cspan class=\"token keyword\">const\u003C/span> newValue1 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token function\">api\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state1\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"16\">      \u003Cspan class=\"token function\">setState1\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>newValue1\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"17\">    \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"18\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"19\">    \u003Cspan class=\"token keyword\">const\u003C/span> cachedValue2 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">cache\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state2\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"20\">    \u003Cspan class=\"token keyword control-flow\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>cachedValue2\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"21\">      \u003Cspan class=\"token function\">setState2\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cachedValue2\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"22\">    \u003Cspan class=\"token punctuation\">}\u003C/span> \u003Cspan class=\"token keyword control-flow\">else\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"23\">      \u003Cspan class=\"token keyword\">const\u003C/span> newValue2 \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token function\">api\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>state2\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"24\">      \u003Cspan class=\"token function\">setState2\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>newValue2\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"25\">    \u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"26\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"27\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"28\">  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">onClick\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">async\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"29\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'log-0'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"30\">    \u003Cspan class=\"token keyword control-flow\">await\u003C/span> \u003Cspan class=\"token function\">updateState\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"31\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'log-1'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"32\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"33\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"34\">  \u003Cspan class=\"token function\">useEffect\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token arrow operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">{\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"35\">    \u003Cspan class=\"token console class-name\">console\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'rerender'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"36\">  \u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"37\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"38\">  \u003Cspan class=\"token keyword control-flow\">return\u003C/span> \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"39\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">Component with cache \u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>state1\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token plain-text\"> \u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>state2\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"40\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>button\u003C/span> \u003Cspan class=\"token attr-name\">onClick\u003C/span>\u003Cspan class=\"token script language-javascript\">\u003Cspan class=\"token script-punctuation punctuation\">=\u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>onClick\u003Cspan class=\"token punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">Click\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>button\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"41\">\u003Cspan class=\"token plain-text\">  \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"42\">\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cimg src=\"/img/2023-09-10-react-may-rerender-before-async-callback-resolves/component-with-multi-states.gif\" alt=\"component-with-multi-states\">\u003C/p>\n\u003Cp>It outputs \u003Ccode>log-0\u003C/code> => \u003Ccode>rerender\u003C/code> => \u003Ccode>log-1\u003C/code>.\nBut if cache misses occur, it outputs \u003Ccode>log-0\u003C/code> => \u003Ccode>rerender\u003C/code> => \u003Ccode>log-1\u003C/code> => \u003Ccode>rerender\u003C/code>.\u003C/p>\n\u003Chr>\n\u003Cp>These examples may seem too unnatural compared to codes on the real world.\nBut believe me, I encountered this problem while developing for real use cases.\nIf \u003Cstrong>we have some codes that need to run before rerendering\u003C/strong>,\nthen we have a problem.\u003C/p>\n\u003Cp>These kinds of caveats hit us so hard wasting our times.\nBut don't get me wrong. I do think this is not a React's problem.\nThe issue I have been describing is not an easy one to solve.\nWe have no way to tell when API calls will return the values.\nIn the meantime, React must decide when to rerender, without ruining user experiences on web pages.\u003C/p>\n\u003Cp>The conclusion is \u003Cstrong>do not assume asynchronous callbacks will finish before rerendering\u003C/strong>.\nKeep in mind that React may rerender earlier for its own sakes.\u003C/p>",{"layout":3,"toc":4,"title":5,"category":6,"tags":8,"author":12},"post",false,"React may Rerender before Async Callback Resolves",[7],"Programming",[9,10,11],"web","react","javascript",[13],"이현재","2023-09-10","en",[]],"uses":{"params":["year","slug"]}}]}
