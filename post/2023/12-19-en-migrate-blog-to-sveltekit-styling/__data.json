{"type":"data","nodes":[null,{"type":"data","data":[{"html":1,"frontmatter":2,"date":17,"lang":18,"tocData":19},"\u003Ch1 id=\"1-tailwind\">tailwind\u003C/h1>\n\u003Cp>I have never used \u003Ca href=\"https://tailwindcss.com/docs\">tailwind\u003C/a> but heard it is great.\nI chose tailwind to add styles to the blog. The reasons behind are these advantages:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>No need to name class names\u003C/strong>\u003Cbr>\nProgrammers always have tough times naming things. CSS class names are no exception.\nI myself think CSS classes are tricky as there are many classes that do the similar things\nbut have something that are different from each other.\u003C/li>\n\u003Cli>\u003Cstrong>No need to manage CSS files\u003C/strong>\u003Cbr>\nWhen building an Web App with CSS files, I need to focus on two files:\none for JavaScripts, another for styles.\nWith tailwind I can focus one single file solely as tailwind codes are integrated into JavaScript files.\u003C/li>\n\u003Cli>\u003Cstrong>Pre-defined classes are very useful and pretty as they are.\u003C/strong>\u003Cbr>\nThis came to me with great advantages. I have used tailwind's pre-defined styles (classes) quite frequently\nand I hardly had to resort to vanilla CSS. Especially, \u003Cstrong>they are beautiful on their own\u003C/strong>.\nI am terrible at choosing colors.\nWhen I found nice looking color themes online and applied them to my projects,\nthey looked awful and I didn't know why.\nCtrl+C/Ctrl+V magic does not work when it comes to me, and styling.\nBut tailwind, the colors, red, slate, blue and etc, they look awesome and pretty.\u003C/li>\n\u003C/ul>\n\u003Cp>I followed tailwind's guide to setup in my project: \u003Ca href=\"https://tailwindcss.com/docs/guides/sveltekit\">link\u003C/a>.\u003C/p>\n\u003Ch2 id=\"2-Caveat\">Caveat\u003C/h2>\n\u003Ch3 id=\"3-Class-names-in-the-tailwind-code-should-be-statically-extractable.\">Class names in the tailwind code should be \u003Cstrong>statically\u003C/strong> extractable.\u003C/h3>\n\u003Cp>What we mean by 'static' is that class names should be extractable without executing the code;\nthe class names should be written in the code as complete unbroken strings.\u003C/p>\n\u003Cpre class=\"language-jsx\">\u003Ccode class=\"language-jsx code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">    \u003Cspan class=\"token punctuation\">{\u003C/span>\u003Cspan class=\"token comment\">/** This don't work since the class names cannot be statically extractable. */\u003C/span>\u003Cspan class=\"token punctuation\">}\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token script language-javascript\">\u003Cspan class=\"token script-punctuation punctuation\">=\u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>\u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token string\">text-\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>shouldHighlight \u003Cspan class=\"token operator\">?\u003C/span> \u003Cspan class=\"token string\">'blue'\u003C/span> \u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token string\">'black'\u003C/span>\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token string\">-500\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">}\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">...\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>\u003Cspan class=\"token comment\">/** This works since the class names can be statically extractable. */\u003C/span>\u003Cspan class=\"token punctuation\">}\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">\u003Cspan class=\"token plain-text\">    \u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token script language-javascript\">\u003Cspan class=\"token script-punctuation punctuation\">=\u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>\u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>shouldHighlight \u003Cspan class=\"token operator\">?\u003C/span> \u003Cspan class=\"token string\">'text-blue-500'\u003C/span> \u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token string\">'text-black-500'\u003C/span>\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">}\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">...\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Here is a quote from tailwind documentation:\u003C/p>\n\u003Cblockquote>\n\u003Cp>The most important implication of how Tailwind extracts class names is that\nit will only find classes that exist as complete unbroken strings in your source files.\u003C/p>\n\u003Cp>If you use string interpolation or concatenate partial class names together,\nTailwind will not find them and therefore will not generate the corresponding CSS.\u003Cbr>\n\u003Ca href=\"https://tailwindcss.com/docs/content-configuration#dynamic-class-names\">https://tailwindcss.com/docs/content-configuration#dynamic-class-names\u003C/a>\u003C/p>\n\u003C/blockquote>\n\u003Cp>You may also use inline styles to evade the problem.\u003C/p>\n\u003Cpre class=\"language-jsx\">\u003Ccode class=\"language-jsx code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">style\u003C/span>\u003Cspan class=\"token script language-javascript\">\u003Cspan class=\"token script-punctuation punctuation\">=\u003C/span>\u003Cspan class=\"token punctuation\">{\u003C/span>\u003Cspan class=\"token template-string\">\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003Cspan class=\"token string\">color: \u003C/span>\u003Cspan class=\"token interpolation\">\u003Cspan class=\"token interpolation-punctuation punctuation\">${\u003C/span>shouldHighlight \u003Cspan class=\"token operator\">?\u003C/span> \u003Cspan class=\"token string\">'red'\u003C/span> \u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token string\">'black'\u003C/span>\u003Cspan class=\"token interpolation-punctuation punctuation\">}\u003C/span>\u003C/span>\u003Cspan class=\"token template-punctuation string\">`\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">}\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">...\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token plain-text\">\n\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch1 id=\"4-Supporting-Pre-defined-Themes\">Supporting Pre-defined Themes\u003C/h1>\n\u003Cp>My blog supports two themes, light and dark themes.\ntailwind supports \u003Ccode>dark\u003C/code> variant. It determines themes based on \u003Ccode>prefers-color-scheme\u003C/code> CSS feature,\nbut the problem is that it does not let users to manually switch themes in an easy way.\u003C/p>\n\u003Cp>Some may say it is good enough already, but why not improve it?\ntailwind also supports themes based on existence of \u003Ccode>dark\u003C/code> class name in parent HTML elements.\nSee \u003Ca href=\"https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually\">docs\u003C/a>\non how to configure tailwind for this.\u003C/p>\n\u003Cp>Then tailwind lets you use dark theme like the code below.\u003C/p>\n\u003Cpre class=\"language-html\">\u003Ccode class=\"language-html code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>dark\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>span\u003C/span> \u003Cspan class=\"token attr-name\">class\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>bg-white dark:bg-black\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>text\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>span\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>When you support themes in your webpages, one important challenge is\nto render themes without flickering when the webpages reload.\nFlickering occurs if the theme switching mechanisms execute slower than your webpage loads.\nWe need to make sure that the theme applies as fast as your webpage loads.\u003C/p>\n\u003Cp>Let me take an example of \u003Ca href=\"https://svelte.dev\">https://svelte.dev\u003C/a> website.\nThey support theme like below.\nIt prioritizes a value stored in \u003Ccode>localStorage\u003C/code> (user settings),\nand then CSS attribute (system settings).\u003C/p>\n\u003Cpre class=\"language-html\">\u003Ccode class=\"language-html code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>body\u003C/span> \u003Cspan class=\"token attr-name\">data-sveltekit-preload-code\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>hover\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>script\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">        \u003Cspan class=\"token keyword\">const\u003C/span> themeValue \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token known-class-name class-name\">JSON\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">parse\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token dom variable\">localStorage\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">getItem\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'svelte:theme'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token operator\">?.\u003C/span>current\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">        \u003Cspan class=\"token keyword\">const\u003C/span> systemPreferredTheme \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token dom variable\">window\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">matchMedia\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'(prefers-color-scheme: dark)'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token property-access\">matches\u003C/span>\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">            \u003Cspan class=\"token operator\">?\u003C/span> \u003Cspan class=\"token string\">'dark'\u003C/span>\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"6\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">            \u003Cspan class=\"token operator\">:\u003C/span> \u003Cspan class=\"token string\">'light'\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"7\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"8\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">        \u003Cspan class=\"token dom variable\">document\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token property-access\">body\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token property-access\">classList\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">remove\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'light'\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token string\">'dark'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"9\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">        \u003Cspan class=\"token dom variable\">document\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token property-access\">body\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token property-access\">classList\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token method function property-access\">add\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>themeValue \u003Cspan class=\"token operator\">??\u003C/span> systemPreferredTheme\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003C/span>\u003C/span>\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"10\">\u003Cspan class=\"token script\">\u003Cspan class=\"token language-javascript\">    \u003C/span>\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>script\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Notice that the script is inserted right after opening body tag.\nThis is to ensure the execution order of \u003Ccode>setup theme -> render HTML\u003C/code>.\n\u003Cstrong>You need to inject the script code before any other HTML element that are being rendered on screen\u003C/strong>.\u003C/p>\n\u003Cp>I wanted to create a separate file for theme script codes\nand reference it from \u003Ccode>app.html\u003C/code> in Sveltekit.\nbut it seemed like there is no easy way to do that.\u003Cbr>\nThe emitted compiled output html contains the script tag as is;\nno transpiling, no src path substitution.\u003C/p>\n\u003Cpre class=\"language-html\">\u003Ccode class=\"language-html code-highlight\">\u003Cspan class=\"code-line line-number\" line=\"1\">\u003Cspan class=\"token comment\">&#x3C;!-- Source app.html -->\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"2\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>body\u003C/span> \u003Cspan class=\"token attr-name\">data-sveltekit-preload-data\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>hover\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"3\">    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>script\u003C/span> \u003Cspan class=\"token attr-name\">type\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>module\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">src\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>/src/lib/colorTheme.ts\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token script\">\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>script\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"4\">    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>div\u003C/span> \u003Cspan class=\"token attr-name\">id\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>root\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>%sveltekit.body%\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>div\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"5\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>body\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"6\">\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"7\">\u003Cspan class=\"token comment\">&#x3C;!-- Compiled output -->\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"8\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>body\u003C/span> \u003Cspan class=\"token attr-name\">data-sveltekit-preload-data\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>hover\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003Cspan class=\"code-line line-number\" line=\"9\">    \u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;\u003C/span>script\u003C/span> \u003Cspan class=\"token attr-name\">type\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>module\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span> \u003Cspan class=\"token attr-name\">src\u003C/span>\u003Cspan class=\"token attr-value\">\u003Cspan class=\"token punctuation attr-equals\">=\u003C/span>\u003Cspan class=\"token punctuation\">\"\u003C/span>/src/lib/colorTheme.ts\u003Cspan class=\"token punctuation\">\"\u003C/span>\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\u003Cspan class=\"token script\">\u003C/span>\u003Cspan class=\"token tag\">\u003Cspan class=\"token tag\">\u003Cspan class=\"token punctuation\">&#x3C;/\u003C/span>script\u003C/span>\u003Cspan class=\"token punctuation\">>\u003C/span>\u003C/span>\n\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Of course, unless there is the script file served at that path,\nSveltekit will raise an error in build phase.\nMy best guess is to serve the script file as a static file at the path,\nor just inline the code.\nI chose to inline the code because the code is short, and needs to be executed anyway.\u003C/p>",{"toc":3,"title":4,"category":5,"tags":7,"author":15},true,"Let's Migrate Github Blog to Sveltekit: Styling",[6],"Programming",[8,9,10,11,12,13,14],"migrate-blog-to-sveltekit","web","svelte","sveltekit","javascript","css","tailwind",[16],"이현재","2023-12-19","en",[20,23,27,31],{"depth":21,"id":22,"text":14},1,"1-tailwind",{"depth":24,"id":25,"text":26},2,"2-Caveat","Caveat",{"depth":28,"id":29,"text":30},3,"3-Class-names-in-the-tailwind-code-should-be-statically-extractable.","Class names in the tailwind code should be statically extractable.",{"depth":21,"id":32,"text":33},"4-Supporting-Pre-defined-Themes","Supporting Pre-defined Themes"],"uses":{"params":["year","slug"]}}]}
